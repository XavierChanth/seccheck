#!/bin/bash
#
FULL_PATH_TO_SCRIPT="$(realpath "$0")"
SCRIPT_DIRECTORY="$(dirname "$FULL_PATH_TO_SCRIPT")"

if [ ! -f "$SCRIPT_DIRECTORY/.ENV" ]; then
    echo "$SCRIPT_DIRECTORY/.ENV does not exist."
    echo "ENV.example is template to use"
    exit 1
fi
if ! [ -x "$(command -v jq)" ]; then echo 'jq is not installed.'; exit 2; fi
source "$SCRIPT_DIRECTORY"/.ENV
PID=$$
mkdir -p "$DIR"
LOG="$DIR/inforeport.${PID}.log"
touch "$LOG"
# Get list of ports to test then test them..
# Ignore secondaries that have been turned down with docker service scale <ID>=0
for PORT in $(docker service ls | grep -v '0/0'|grep secondary:"$VERSION" |sed 's/.*\*://'|sed 's/->.*$//')
do
    "$SCRIPT_DIRECTORY"/infosecondary.expect "$PORT" | jq -r .version >> "$LOG"
done
RESULTS="$(sort "$LOG" | uniq -c)"
# Send results to gChat
curl --location --request POST "${URL}" --header 'Content-Type: application/json' \
  --data-raw "{\"text\": \"Secondary versions: \\n ${RESULTS} \"}"
#
# Do some tidying up of logs files
COUNT=$(ls -1 "$DIR" | wc -l)
LEFT=$((COUNT - LEAVE))
if (( LEFT >= 0 ))
then
    rm -f $(ls -td "$DIR"/* |tail -$LEFT)
fi
exit 0
